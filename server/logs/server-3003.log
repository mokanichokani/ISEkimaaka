Environment check:
Current directory: /Users/mokanichokani/Documents/mcCode/Kimaaka/Kimaaka-extension/ISEkimaaka/server
MONGODB_URI exists: true
JWT_SECRET exists: true
MONGODB_URI starts with mongodb: true

============================================================
[2025-08-10T16:47:42.957Z] üöÄ Kimaaka Server Started Successfully!
[2025-08-10T16:47:42.957Z] üåê Server running on port 3003
[2025-08-10T16:47:42.957Z] üìä Admin panel (via server): http://localhost:3003/admin/admin.html
[2025-08-10T16:47:42.957Z] üìä Admin panel (standalone): See admin-dashboard/README.md
[2025-08-10T16:47:42.957Z] üîë API endpoint: http://localhost:3003/api/gemini-key
[2025-08-10T16:47:42.957Z] üíù Donation endpoint: http://localhost:3003/api/donate-key
[2025-08-10T16:47:42.957Z] üìã Health check: http://localhost:3003/api/health
============================================================
[2025-08-10T16:47:42.957Z] üëÄ Monitoring all requests...

[2025-08-10T16:47:42.980Z] GET /api/health - IP: ::1
Health check error: MongooseError: Cannot call `apikeys.countDocuments()` before initial connection is complete if `bufferCommands = false`. Make sure you `await mongoose.connect()` if you have `bufferCommands = false`.
    at NativeCollection.<computed> [as countDocuments] (/Users/mokanichokani/Documents/mcCode/Kimaaka/Kimaaka-extension/ISEkimaaka/server/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:237:15)
    at model.Query._countDocuments (/Users/mokanichokani/Documents/mcCode/Kimaaka/Kimaaka-extension/ISEkimaaka/server/node_modules/mongoose/lib/query.js:2808:34)
    at model.Query.exec (/Users/mokanichokani/Documents/mcCode/Kimaaka/Kimaaka-extension/ISEkimaaka/server/node_modules/mongoose/lib/query.js:4627:80)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Promise.all (index 0)
    at async /Users/mokanichokani/Documents/mcCode/Kimaaka/Kimaaka-extension/ISEkimaaka/server/server.js:823:52
[2025-08-10T16:47:42.980Z] Response: 503 GET /api/health
[2025-08-10T16:47:42.980Z] Error Response: {"status":"unhealthy","database":"error","error":"Cannot call `apikeys.countDocuments()` before initial connection is complete if `bufferCommands = false`. Make sure you `await mongoose.connect()` if you have `bufferCommands = false`.","timestamp":"2025-08-10T16:47:42.982Z"}
[2025-08-10T16:47:43.123Z] üîó Mongoose connected to MongoDB
[2025-08-10T16:47:43.123Z] üóÑÔ∏è Connected to MongoDB successfully
üìä Resumed usage tracking for server: http://localhost:3003/api
[2025-08-10T16:47:48.545Z] GET /api/health - IP: ::1
[2025-08-10T16:47:48.545Z] Response: 200 GET /api/health
[2025-08-10T16:47:49.210Z] GET /api/health - IP: ::1
[2025-08-10T16:47:49.210Z] Response: 200 GET /api/health
[2025-08-10T16:48:19.458Z] GET /api/health - IP: ::1
[2025-08-10T16:48:19.458Z] Response: 200 GET /api/health
[2025-08-10T16:48:49.457Z] GET /api/health - IP: ::1
[2025-08-10T16:48:49.457Z] Response: 200 GET /api/health
[2025-08-10T16:49:19.455Z] GET /api/health - IP: ::1
[2025-08-10T16:49:19.455Z] Response: 200 GET /api/health
[2025-08-10T16:49:49.464Z] GET /api/health - IP: ::1
[2025-08-10T16:49:49.464Z] Response: 200 GET /api/health
[2025-08-10T16:50:19.458Z] GET /api/health - IP: ::1
[2025-08-10T16:50:19.458Z] Response: 200 GET /api/health
[2025-08-10T16:50:49.461Z] GET /api/health - IP: ::1
[2025-08-10T16:50:49.461Z] Response: 200 GET /api/health
[2025-08-10T16:51:48.474Z] GET /api/health - IP: ::1
[2025-08-10T16:51:48.474Z] Response: 200 GET /api/health
[2025-08-10T16:52:19.462Z] GET /api/health - IP: ::1
[2025-08-10T16:52:19.462Z] Response: 200 GET /api/health
[2025-08-10T16:52:49.462Z] GET /api/health - IP: ::1
[2025-08-10T16:52:49.462Z] Response: 200 GET /api/health
